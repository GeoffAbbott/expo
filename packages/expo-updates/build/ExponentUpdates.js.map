{"version":3,"file":"ExponentUpdates.js","sourceRoot":"","sources":["../src/ExponentUpdates.ts"],"names":[],"mappings":"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","sourcesContent":["import { RCTDeviceEventEmitter } from '@unimodules/core';\nimport Constants from 'expo-constants';\nimport { EventEmitter, EventSubscription } from 'fbemitter';\nimport { NativeModules } from 'react-native';\n\nimport {\n  UpdateCheckResult,\n  UpdateFetchResult,\n  Listener,\n  UpdateEvent,\n  UpdateEventType,\n} from './Updates.types';\n\nexport default NativeModules.ExponentUpdates\n  ? {\n      get name(): string {\n        return 'ExponentUpdates';\n      },\n      get manifest(): any {\n        return Constants.manifest;\n      },\n      async reload(): Promise<void> {\n        await NativeModules.ExponentUpdates.reloadFromCache();\n      },\n      async checkForUpdateAsync(): Promise<UpdateCheckResult> {\n        const result = await NativeModules.ExponentUpdates.checkForUpdateAsync();\n        if (!result) {\n          return { isAvailable: false };\n        }\n\n        return {\n          isAvailable: true,\n          manifest: typeof result === 'string' ? JSON.parse(result) : result,\n        };\n      },\n      async fetchUpdateAsync(): Promise<UpdateFetchResult> {\n        _isFetchingUpdate = true;\n        const result = await NativeModules.ExponentUpdates.fetchUpdateAsync();\n        setTimeout(() => {\n          _isFetchingUpdate = false;\n        }, 0);\n\n        if (!result) {\n          return { isNew: false };\n        }\n\n        return {\n          isNew: true,\n          manifest: typeof result === 'string' ? JSON.parse(result) : result,\n        };\n      },\n      addListener(listener: Listener<UpdateEvent>): EventSubscription {\n        const emitter = _getEmitter();\n        return emitter.addListener('Expo.updatesEvent', listener);\n      },\n    }\n  : null;\n\nlet _emitter: EventEmitter | null;\nlet _isFetchingUpdate = false;\n\nfunction _getEmitter(): EventEmitter {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    RCTDeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent', _emitEvent);\n  }\n  return _emitter;\n}\n\nfunction _emitEvent(params): void {\n  // The legacy implementation emits additional events during the `fetchUpdateAsync` call. Since the\n  // new implementation does not do this, we should ignore these events.\n  if (_isFetchingUpdate) {\n    return;\n  }\n\n  let newParams = params;\n  if (typeof params === 'string') {\n    newParams = JSON.parse(params);\n  }\n  if (newParams.manifestString) {\n    newParams.manifest = JSON.parse(newParams.manifestString);\n    delete newParams.manifestString;\n  }\n\n  // transform legacy event types\n  if (\n    newParams.type === LegacyUpdatesEventType.DOWNLOAD_STARTED ||\n    newParams.type === LegacyUpdatesEventType.DOWNLOAD_PROGRESS\n  ) {\n    return;\n  } else if (newParams.type === LegacyUpdatesEventType.DOWNLOAD_FINISHED) {\n    newParams.type = UpdateEventType.UPDATE_AVAILABLE;\n  }\n\n  if (!_emitter) {\n    throw new Error(`EventEmitter must be initialized to use from its listener`);\n  }\n  _emitter.emit('Expo.updatesEvent', newParams);\n}\n\nenum LegacyUpdatesEventType {\n  DOWNLOAD_STARTED = 'downloadStart',\n  DOWNLOAD_PROGRESS = 'downloadProgress',\n  DOWNLOAD_FINISHED = 'downloadFinished',\n  NO_UPDATE_AVAILABLE = 'noUpdateAvailable',\n  ERROR = 'error',\n}\n"]}